// <auto-generated />
using System;
using Les_oiseaux.Inf.Database.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Les_oiseaux.Inf.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Les_oiseaux.App.Models.Category", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("category", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.Price", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("REAL")
                        .HasColumnName("amount");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT")
                        .HasColumnName("currency");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("price", "dbo");
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.Product", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CategoryId")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasColumnName("category_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2049)
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<string>("FileId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("file_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<long?>("PriceId")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasColumnName("price_id");

                    b.Property<int>("Quanitity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0)
                        .HasColumnName("quanitity");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(2)
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PriceId")
                        .IsUnique();

                    b.ToTable("product", "dbo");
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.ShoppingCart", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT")
                        .HasColumnName("currency");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0)
                        .HasColumnName("status");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("REAL")
                        .HasColumnName("total_price");

                    b.HasKey("Id")
                        .HasName("id");

                    b.ToTable("shopping_cart", "dbo");
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.ShoppingCartItem", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ProductId")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<long?>("ShoppingCartId")
                        .IsRequired()
                        .HasColumnType("INTEGER")
                        .HasColumnName("shopping_cart_id");

                    b.HasKey("Id")
                        .HasName("id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("shopping_cart_item", "dbo");
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.Product", b =>
                {
                    b.HasOne("Les_oiseaux.App.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Les_oiseaux.App.Models.Price", "Price")
                        .WithOne("Product")
                        .HasForeignKey("Les_oiseaux.App.Models.Product", "PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("Les_oiseaux.App.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Les_oiseaux.App.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.Price", b =>
                {
                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("Les_oiseaux.App.Models.ShoppingCart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
